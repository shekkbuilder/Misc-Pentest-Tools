#!/usr/bin/env python3
#
# Script name     : snmp-enum.py
# Version         : 1.0
# Created date    : 3/1/2017
# Last update     : 5/1/2017
# Inspired by     : snmp-check
# Author          : Milton Valencia (wetw0rk)
# Python version  : 3.0
# Description     : This tool simply authenticates to YOUR gmail and sends a
#                   message to every email you provide in a list. This was created
#                   to automate sending my resume however this tool can be easily leveraged
#                   to engage in phishing attacks. Say you compromise a PC and the user re-uses
#                   passwords BOOM! Who needs spoofing when you can use there actual email lol.
#                   Since this tool was originally desgined for my resume I have only tested pdf
#                   documents however since this is open source feel free to email me with
#                   any changes at mvalen1997@gmail.com
#

import os, sys, getpass, argparse
from email.mime.text import MIMEText
from email.mime.application import MIMEApplication
from email.mime.multipart import MIMEMultipart
from smtplib import SMTP

def mass_mail(my_email, email_list, attachment, message):

	# loop for settings
	send_or_naw = 'N'
	while send_or_naw != 'Y':

		print "[*] Mass mail selected!"
		subject = raw_input("[?] What is the subject> ")
		print("------Current settings------")
		print("Your Email: %s" % my_email)
		print("Email List: %s" % email_list)
		print("MSG Body: %s" % message)
		print("Attachment: %s" % attachment)

		# ask if settings correct
		send_or_naw = raw_input("[?] Continue (Y/N)> ")

	# get the message from .txt file
	message_file = open(message, 'r')
	read_message_file = message_file.read()

	# get the emails from the provided list
	email_file = open(email_list, 'r')
	read_email_file = email_file.read()
	email = read_email_file.split()

	# get the amount of emails
	amount_of_emails = len(email)

	# connect to gmails smtp server
	smtp = SMTP("smtp.gmail.com", 587)
	smtp.ehlo()
	smtp.starttls()

	# grab password && authenticate
	password = getpass.getpass()
	smtp.login(my_email, password)

	for recepient in range(amount_of_emails):
		msg = MIMEMultipart()
		msg['Subject'] = subject
		msg['From'] = my_email
		msg['Reply-to'] = my_email
		msg['To'] = email[recepient]
		msg.preamble = 'Multipart massage.\n'
		# message to be sent
		part = MIMEText(read_message_file)
		msg.attach(part)
		part = MIMEApplication(open(attachment,"rb").read())
		part.add_header('Content-Disposition', 'attachment', filename=str(attachment))
		msg.attach(part)
		print('[+] Sending your attachment to %s' % email[recepient])
		smtp.sendmail(msg['From'], msg['To'], msg.as_string())

def one_user(my_email, single_e, attachment, message):

	# loop for settings
	send_or_naw = 'N'
	while send_or_naw != 'Y':

		print "[*] Single mail selected (are you sure?)"
		subject = raw_input("[?] What is the subject> ")
		print("------Current settings------")
		print("Your Email: %s" % my_email)
		print("Email Target: %s" % single_e)
		print("MSG Body: %s" % message)
		print("Attachment: %s" % attachment)

		# ask if settings correct
		send_or_naw = raw_input("[?] Continue (Y/N)> ")

	# get the message from .txt file
	message_file = open(message, 'r')
	read_message_file = message_file.read()

	# connect to gmails smtp server
	smtp = SMTP("smtp.gmail.com", 587)
	smtp.ehlo()
	smtp.starttls()

	# grab password && authenticate
	password = getpass.getpass()
	smtp.login(my_email, password)

	msg = MIMEMultipart()
	msg['Subject'] = subject
	msg['From'] = my_email
	msg['Reply-to'] = my_email
	msg['To'] = single_e
	msg.preamble = 'Multipart massage.\n'
	msg.preamble = 'Multipart massage.\n'
	# message to be sent
	part = MIMEText(read_message_file)
	msg.attach(part)
	part = MIMEApplication(open(attachment,"rb").read())
	part.add_header('Content-Disposition', 'attachment', filename=str(attachment))
	msg.attach(part)
	print('[+] Sending your attachment to %s' % single_e)
	smtp.sendmail(msg['From'], msg['To'], msg.as_string())

def main():

	try:
		# handle arguments
		parser = argparse.ArgumentParser()
		parser.add_argument("-s", "--source", help="email source")
		parser.add_argument("-L", "--list", help="email list")
		parser.add_argument("-t", "--to", help="single email")
		parser.add_argument("-a", "--attachment", help="attachment to send")
		parser.add_argument("-m", "--message", help="message body")
		args = parser.parse_args()

		# assign args
		my_email = args.source
		email_list = args.list
		single_e = args.to
		attachment = args.attachment
		message = args.message

		if email_list > 1:
			mass_mail(my_email, email_list, attachment, message)
		elif single_e > 1:
			one_user(my_email, single_e, attachment, message)
		else:
			print(parser.print_help())
			sys.exit()
	except:

		# print msg if error
		sys.exit()


main()
