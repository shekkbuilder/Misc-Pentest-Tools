#!/usr/bin/env python
#
# Script name     : url_tester.py
# Version         : 2.0
# Created date    : 3/1/2017
# Last update     : 5/1/2017
# Author          : wetw0rk
# Python version  : 2.7
# Description     : Unlike source-killer this takes a "wordlist/directory-list"
#                   and tests it on the remote server. Basically ghetto dirb;
#                   great for launching from a seperate comprimised host.
#

import os, sys, Queue, urllib2, threading

try:

	target			= sys.argv[1]
	wordlist_file		= sys.argv[2]
	threads			= int(sys.argv[3])

except IndexError:

	print "%s <http:target> <wordlist> <threads>" % (sys.argv[0])
	sys.exit()

wordlist = Queue.Queue()

# Put Every Line In Wordlist In Queue
word_file = open(wordlist_file)
raw_words = word_file.readlines()
for words in raw_words:
#	wordlist.put(words.rstrip())
	wordlist.put("/" + words.rstrip())

# Test On Remote Server
def test_remote():
	while not wordlist.empty():
		path = wordlist.get()
		url = "%s%s" % (target, path)
		headers = {}
		headers['User-Agent'] = "Googlebot"
		request = urllib2.Request(url)
		try:
			response	= urllib2.urlopen(request)
			content		= response.read()

			print "[%d] => %s" % (response.code, path)
			response.close()

		except:
			pass

# Spawn Threads For test_remote()
for n in range(threads):
	t = threading.Thread(target=test_remote)
	t.start()
