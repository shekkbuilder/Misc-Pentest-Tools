#!/usr/bin/env python
# - *- coding: utf- 8 - *-
#
# Script name     : zip-crack.py
# Version         : 1.0
# Created date    : 3/1/2017
# Last update     : 5/1/2017
# Author          : wetw0rk
# Python version  : 2.7
# Description     : Simply does a bruteforce attack on an encrypted ZipFile.
#


import sys, zipfile
from termcolor import colored

def banner():
	print(colored("    )          (", "red"))
	print(colored(" ( /(          )\ )", "red"))
	print(colored(" )\())(       (()/((  (", "red"))
	print(colored("((_)\ )\ `  )  /(_))\))(   (", "red"))
	print(colored(" _((_|(_)/(/( (_))((_)()\  )\ )", "red"))
	print(colored("|_  / (_|(_)_\| _ \(()((_)_(_/(", "red"))
	print(colored(" / /  | | '_ \)  _| V  V / ' \))", "yellow"))
	print(colored("/___| |_| .__/|_|  \_/\_/|_||_|", "yellow"))
	print(colored("        |_|", "yellow"))


try:

	zipfilename	= sys.argv[1]
	wordlist	= sys.argv[2]
	password	= None

except IndexError:

	banner()
	print "Usage: %s <zip_file> <wordlist>" % sys.argv[0]
	sys.exit()

def crack(zipfilename, wordlist, password):

	# Open wordlist, and read each password attempt
	wordlist_to_open	= open(wordlist, 'r')
	wordlist_read		= wordlist_to_open.read()
	dictionary		= wordlist_read.split()
	password_attempts	= len(dictionary)
	# ZipFile object to interact with zip
	zip_file = zipfile.ZipFile(zipfilename)
	# This is the actual bruteforcing (added 1 as python reads 0,1,etc)
	banner()
	print "[*] Starting attack on %s" % zipfilename
	print "[*] Attempting %d passwords" % (password_attempts + 1)
	for password in range(password_attempts):
		try:

			zip_file.extractall(pwd=dictionary[password])
			print "\n (╯°□°）╯︵ ┻━┻ PASSWORD FOUND!: %s" % dictionary[password]
			sys.exit()

		except:

			sys.stdout.write("\r[*] Password Failed: " + dictionary[password])
			sys.stdout.flush()

	print "\n┬─┬ノ( º _ ºノ) ATTACK OVER" # Just the cherry ontop not needed

crack(zipfilename, wordlist, password)
